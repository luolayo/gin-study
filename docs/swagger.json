{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Gin study is a small project for beginners to learn by writing a blog built by the gin framework.",
        "title": "Gin Study API",
        "contact": {},
        "version": "1.0.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/SMS/send": {
            "get": {
                "description": "Sent verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SMS"
                ],
                "summary": "SentVerificationCode",
                "parameters": [
                    {
                        "type": "string",
                        "format": "18888888888",
                        "example": "18888888888",
                        "description": "Phone number",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/checkName": {
            "get": {
                "description": "check username availability",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "CheckName",
                "parameters": [
                    {
                        "maxLength": 10,
                        "minLength": 5,
                        "type": "string",
                        "format": "luolayo",
                        "example": "luolayo",
                        "description": "Username",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/checkPhone": {
            "get": {
                "description": "check phone number availability",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "CheckPhone",
                "parameters": [
                    {
                        "type": "string",
                        "format": "18888888888",
                        "example": "18888888888",
                        "description": "UserPhone",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "Get user information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "UserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "example": "{{token}}",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "User login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "UserLogin",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "RegisterUser",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "interceptor.Empty": {
            "type": "object"
        },
        "interceptor.ResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "err": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-interceptor_Empty": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interceptor.Empty"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-model_User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.User"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Group": {
            "type": "string",
            "enum": [
                "admin",
                "user",
                "guest"
            ],
            "x-enum-varnames": [
                "GroupAdmin",
                "GroupUser",
                "GroupGuest"
            ]
        },
        "model.User": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/model.Group"
                },
                "logged": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "screenName": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.UserLogin": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "model.UserRegister": {
            "type": "object",
            "required": [
                "code",
                "confirmPassword",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "123456"
                },
                "confirmPassword": {
                    "type": "string",
                    "example": "123456"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "18888888888"
                },
                "screenName": {
                    "type": "string",
                    "example": "罗拉"
                },
                "url": {
                    "type": "string",
                    "example": "https://www.luola.me"
                }
            }
        }
    }
}