// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/article": {
            "get": {
                "description": "ArticleList",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "ArticleList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-array_model_ArticleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/article/:id": {
            "get": {
                "description": "Article",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Article",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_ArticleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/test": {
            "get": {
                "description": "Test ping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    }
                }
            },
            "post": {
                "description": "Test pong",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Pong",
                "parameters": [
                    {
                        "description": "Test data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_Test"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/test/checkVerificationCode": {
            "get": {
                "description": "Check verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "TestCheckVerificationCode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification code",
                        "name": "verification_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/test/decryption": {
            "get": {
                "description": "Test encryption function",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "TestDecryption",
                "parameters": [
                    {
                        "type": "string",
                        "description": "encryption",
                        "name": "encryption",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/test/encryption": {
            "get": {
                "description": "Test encryption function",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "TestEncryption",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/test/sentVerificationCode": {
            "get": {
                "description": "Sent verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "TestSentVerificationCode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "User information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "User login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "User registration",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-model_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        },
        "/util/sentVerificationCode": {
            "get": {
                "description": "Sent verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Util"
                ],
                "summary": "SentVerificationCode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseSuccess-interceptor_Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/interceptor.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "interceptor.Empty": {
            "type": "object"
        },
        "interceptor.ResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "err": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-array_model_ArticleResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ArticleResponse"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-interceptor_Empty": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interceptor.Empty"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-model_ArticleResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.ArticleResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-model_Test": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.Test"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-model_UserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.UserResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interceptor.ResponseSuccess-string": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ArticleResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.Test": {
            "type": "object"
        },
        "model.UserLogin": {
            "type": "object",
            "required": [
                "passwd",
                "phone"
            ],
            "properties": {
                "passwd": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.UserRegister": {
            "type": "object",
            "required": [
                "code",
                "confirmPassword",
                "name",
                "passwd",
                "phone"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "confirmPassword": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.1",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Gin Study API",
	Description:      "Gin study is a small project for beginners to learn by writing a blog built by the gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
